/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&led_strip {
    chain-length = <29>; // Sofle Using All LEDs
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        cs {
            bindings = <&to 3>;
            key-positions = <39 40 41>;
            layers = <2 3>;
        };

        home {
            bindings = <&to 0>;
            key-positions = <27 28 29>;
            layers = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE      &kp N1  &kp N2          &kp N3        &kp N4        &kp N5                                     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W           &kp E         &kp R         &kp T                                      &kp Y      &kp U      &kp I      &kp O     &kp P     &kp DELETE
&kp LEFT_SHIFT  &kp A   &kp S           &kp D         &kp F         &kp G                                      &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp RCTRL       &kp Z   &kp X           &kp C         &kp V         &kp B      &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp LSHFT
                        &lt 2 CAPSLOCK  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &tog 1        &to 1             &kp ENTER  &kp RCTRL  &kp MINUS  &kp PLUS
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        symbols {
            bindings = <
&trans  &trans          &trans          &trans           &trans  &trans                    &trans  &trans  &trans            &trans             &trans           &trans
&trans  &trans          &kp UP_ARROW    &trans           &trans  &trans                    &trans  &trans  &trans            &trans             &kp KP_EQUAL     &kp KP_EQUAL
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans                    &trans  &trans  &trans            &trans             &kp EQUAL        &kp EQUAL
&trans  &trans          &trans          &trans           &trans  &trans  &trans    &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BSLH  &trans
                        &trans          &trans           &trans  &trans  &trans    &trans  &trans  &trans  &trans            &kp DOWN_ARROW
            >;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&none            &none            &none            &kp D            &bt BT_PRV       &bt BT_NXT                       &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &none  &none
&rgb_ug RGB_OFF  &none            &none            &kp C            &bt BT_CLR       &bt BT_CLR_ALL                   &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &none            &none  &none
&rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI                  &none            &none            &none            &none            &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD  &none    &none  &none            &none            &none            &none            &none  &none
                                  &none            &none            &none            &none            &none    &none  &none            &none            &none            &none
            >;
        };

        cs {
            bindings = <
&kp ESC    &kp N1  &kp N2      &kp N3        &kp N4        &kp N5                          &kp N6  &kp N7     &kp N8            &kp N9             &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W       &kp E         &kp R         &kp T                           &kp Y   &kp U      &kp I             &kp O              &kp P     &kp DEL
&kp LSHFT  &kp A   &kp S       &kp D         &kp F         &kp G                           &kp H   &kp J      &kp K             &kp L              &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X       &kp C         &kp V         &kp B   &trans       &trans     &kp N   &kp M      &kp COMMA         &kp DOT            &kp FSLH  &kp RSHFT
                   &lt 2 CAPS  &kp LEFT_ALT  &kp LEFT_ALT  &mo 0   &kp SPACE    &kp ENTER  &mo 0   &kp RCTRL  &kp RC(RG(LEFT))  &kp RC(RG(RIGHT))
            >;

            label = "cs";
        };
    };
};
